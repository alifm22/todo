{"version":3,"sources":["components/header/Header.js","redux/actions/addTodo.js","components/addTodo/AddTodo.js","redux/actions/toggleComplete.js","redux/actions/delTodo.js","components/todo/Todo.js","components/todoList/TodoList.js","components/about/About.js","App.js","serviceWorker.js","redux/reducers/todos.js","redux/index.js","index.js"],"names":["Header","className","style","titleStyle","linkStyle","to","color","Component","textDecoration","borderRadius","background","boxShadow","addTodo","_id","_title","type","id","title","AddTodo","state","onChange","e","setState","target","name","value","onSubmit","preventDefault","props","dispatch","uuidv4","inputFormStyle","placeholder","this","textInputStyle","onClick","submitBtnStyle","backgroundColor","borderColor","position","bottom","width","margin","padding","toggleComplete","itemID","delTodo","Todo","getMarkCompletedStyle","item","completed","markComplete","deleteHandler","bind","defaultChecked","htmlFor","text","height","viewBox","fill","xmlns","d","fillRule","clipRule","TodoList","Fragment","Tabs","defaultActiveKey","Tab","eventKey","map","key","isChecked","About","App","useDispatch","store","useSelector","todoList","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","todos","action","todo","filter","allReducers","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","loadFromLocalStorage","localStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveToLocalStorage","getState","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a126594f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"text-center\" style={titleStyle}>\r\n        <h1 className=\"pt-2 pb-2 m-0\">Todo List</h1>\r\n        <Link style={linkStyle} to=\"/todo\">\r\n          Home\r\n        </Link>{\" \"}\r\n        <span style={{ color: \"white\" }}>|</span>{\" \"}\r\n        <Link style={linkStyle} to=\"/about\">\r\n          About\r\n        </Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst linkStyle = {\r\n  color: \"#fff\",\r\n  textDecoration: \"none\"\r\n};\r\n\r\nconst titleStyle = {\r\n  borderRadius: \"0 0 30% 30%\",\r\n  background: \"#05414e\",\r\n  boxShadow: \"0px 4px 7px 0px #333\"\r\n};\r\n\r\nexport default Header;\r\n","export const addTodo = (_id, _title) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    id: _id,\r\n    title: _title\r\n  };\r\n};\r\nexport default addTodo;\r\n","import React, { Component } from \"react\";\r\nimport addTodo from \"../../redux/actions/addTodo\";\r\nimport uuidv4 from \"uuid\";\r\nimport dbServices from \"../../database/dbServices\";\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.title !== \"\") {\r\n      this.props.dispatch(addTodo(uuidv4(), this.state.title));\r\n      //   dbServices.addToDB({\r\n      //     id: uuidv4(),\r\n      //     title: this.state.title,\r\n      //     completed: false\r\n      //   });\r\n    }\r\n\r\n    this.setState({ title: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form style={inputFormStyle}>\r\n        <div className=\"form-row\">\r\n          <div className=\"col-9 pr-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"title\"\r\n              placeholder=\"Add Todo ...\"\r\n              value={this.state.title}\r\n              onChange={this.onChange}\r\n              style={textInputStyle}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 pl-0\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn w-100\"\r\n              onClick={this.onSubmit}\r\n              style={submitBtnStyle}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst textInputStyle = {\r\n  borderRadius: \"0.25rem 0 0 0.25rem\"\r\n};\r\nconst submitBtnStyle = {\r\n  borderRadius: \"0 0.25rem 0.25rem 0\",\r\n  backgroundColor: \"#063d4c\",\r\n  borderColor: \"#ced4da\",\r\n  color: \"white\"\r\n};\r\nconst inputFormStyle = {\r\n  position: \"fixed\",\r\n  bottom: \"0\",\r\n  width: \"100%\",\r\n  margin: \"auto\",\r\n  padding: \"0.5rem\"\r\n};\r\nexport default AddTodo;\r\n","export const toggleComplete = id => {\r\n  return {\r\n    type: \"TOGGLE_COMPLETE\",\r\n    itemID: id\r\n  };\r\n};\r\nexport default toggleComplete;\r\n","export const delTodo = _id => {\r\n  return {\r\n    type: \"DELETE_TODO\",\r\n    id: _id\r\n  };\r\n};\r\nexport default delTodo;\r\n","import React, { Component } from \"react\";\r\nimport toggleComplete from \"../../redux/actions/toggleComplete\";\r\nimport delTodo from \"../../redux/actions/delTodo\";\r\nexport class Todo extends Component {\r\n  getMarkCompletedStyle = () => {\r\n    return {\r\n      textDecoration: this.props.item.completed ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  markComplete = id => {\r\n    this.props.dispatch(toggleComplete(id));\r\n  };\r\n\r\n  deleteHandler = id => {\r\n    this.props.dispatch(delTodo(id));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"funkyradio-success mr-2 ml-2 row\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          id={this.props.item.id}\r\n          onClick={this.markComplete.bind(this, this.props.item.id)}\r\n          defaultChecked={this.props.item.completed}\r\n        />\r\n        <label\r\n          style={this.getMarkCompletedStyle()}\r\n          className=\"mt-1 mb-1 col-11\"\r\n          htmlFor={this.props.item.id}\r\n        >\r\n          {this.props.item.text}\r\n        </label>\r\n        {/* <button className=\"m-auto float-right editBtn col-1\"><svg className=\"bi bi-pencil\" width=\"1em\" height=\"1em\" viewBox=\"0 0 20 20\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path fillRule=\"evenodd\" d=\"M13.293 3.293a1 1 0 011.414 0l2 2a1 1 0 010 1.414l-9 9a1 1 0 01-.39.242l-3 1a1 1 0 01-1.266-1.265l1-3a1 1 0 01.242-.391l9-9zM14 4l2 2-9 9-3 1 1-3 9-9z\" clipRule=\"evenodd\"></path>\r\n                                                        <path fillRule=\"evenodd\" d=\"M14.146 8.354l-2.5-2.5.708-.708 2.5 2.5-.708.708zM5 12v.5a.5.5 0 00.5.5H6v.5a.5.5 0 00.5.5H7v.5a.5.5 0 00.5.5H8v-1.5a.5.5 0 00-.5-.5H7v-.5a.5.5 0 00-.5-.5H5z\" clipRule=\"evenodd\"></path>\r\n                                                        </svg></button> */}\r\n        <button\r\n          className=\"m-auto float-right trashBtn col-1\"\r\n          onClick={this.deleteHandler.bind(this, this.props.item.id)}\r\n        >\r\n          <svg\r\n            className=\"bi bi-trash\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"M7.5 7.5A.5.5 0 018 8v6a.5.5 0 01-1 0V8a.5.5 0 01.5-.5zm2.5 0a.5.5 0 01.5.5v6a.5.5 0 01-1 0V8a.5.5 0 01.5-.5zm3 .5a.5.5 0 00-1 0v6a.5.5 0 001 0V8z\"></path>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M16.5 5a1 1 0 01-1 1H15v9a2 2 0 01-2 2H7a2 2 0 01-2-2V6h-.5a1 1 0 01-1-1V4a1 1 0 011-1H8a1 1 0 011-1h2a1 1 0 011 1h3.5a1 1 0 011 1v1zM6.118 6L6 6.059V15a1 1 0 001 1h6a1 1 0 001-1V6.059L13.882 6H6.118zM4.5 5V4h11v1h-11z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport Todo from \"../todo/Todo\";\r\n\r\nexport class TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Tabs\r\n          defaultActiveKey=\"allTasks\"\r\n          className=\"nav-justified mt-3 mb-2\"\r\n          id=\"uncontrolled-tab-example\"\r\n        >\r\n          <Tab eventKey=\"allTasks\" title=\"All Tasks\">\r\n            <div className=\"funkyradio\">\r\n              {this.props.state.map(item => (\r\n                <Todo\r\n                  key={item.id}\r\n                  item={item}\r\n                  dispatch={this.props.dispatch}\r\n                  isChecked={item.completed}\r\n                ></Todo>\r\n              ))}\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"progress\" title=\"In Progress\">\r\n            <div className=\"funkyradio\">\r\n              {this.props.state.map(item =>\r\n                item.completed ? (\r\n                  <React.Fragment></React.Fragment>\r\n                ) : (\r\n                  <Todo\r\n                    key={item.id}\r\n                    item={item}\r\n                    dispatch={this.props.dispatch}\r\n                    isChecked={item.completed}\r\n                  ></Todo>\r\n                )\r\n              )}\r\n            </div>\r\n          </Tab>\r\n          <Tab eventKey=\"completed\" title=\"Completed\">\r\n            <div className=\"funkyradio\">\r\n              {this.props.state.map(item =>\r\n                !item.completed ? (\r\n                  <React.Fragment></React.Fragment>\r\n                ) : (\r\n                  <Todo\r\n                    key={item.id}\r\n                    item={item}\r\n                    dispatch={this.props.dispatch}\r\n                    isChecked={item.completed}\r\n                  ></Todo>\r\n                )\r\n              )}\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return <div>Hello World</div>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Header } from \"./components/header/Header\";\nimport { AddTodo } from \"./components/addTodo/AddTodo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TodoList from \"./components/todoList/TodoList\";\nimport About from \"./components/about/About\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.todoList);\n  return (\n    <Router>\n      <div className=\"container p-0\">\n        <Header />\n        <Route\n          exact\n          path=\"/todo\"\n          render={props => (\n            <React.Fragment>\n              <TodoList dispatch={dispatch} state={store} />\n              <AddTodo dispatch={dispatch} />\n            </React.Fragment>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n      </div>\n    </Router>\n\n    // <React.Fragment>\n    //   <div className=\"container p-0\">\n    //     <Header />\n\n    //   </div>\n    //   <script src=\"jquery/dist/jquery.min.js\"></script>\n    //   <script src=\"bootstrap/dist/js/bootstrap.min.js\"></script>\n    // </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.title,\r\n          completed: false\r\n        }\r\n      ];\r\n    case \"TOGGLE_COMPLETE\":\r\n      state = state.map(todo => {\r\n        if (todo.id === action.itemID) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n      return state;\r\n    case \"DELETE_TODO\":\r\n      state = [...state.filter(todo => todo.id !== action.id)];\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import todos from \"./reducers/todos\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  todoList: todos\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./redux/\";\nimport \"./custom.scss\";\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\nconst persistedState = loadFromLocalStorage();\n\nconst localStore = createStore(\n  allReducers,\n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nlocalStore.subscribe(() => saveToLocalStorage(localStore.getState()));\n\nReactDOM.render(\n  <Provider store={localStore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}